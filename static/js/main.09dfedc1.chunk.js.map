{"version":3,"sources":["assets/github.svg","components/styled-components/appComponentStyles.js","components/styled-components/globalStyle.js","components/Header.js","components/Footer.js","factories/Ship.js","shipTypes.js","factories/Gameboard.js","factories/Player.js","components/styled-components/gameWindowStyles.js","actions/types.js","ComputerAI.js","components/screens/StartEnd.js","actions/index.js","components/boards/Grid.js","components/boards/SetupSquares.js","components/screens/Setup.js","components/boards/PlayerSquares.js","components/boards/EnemySquares.js","components/screens/Game.js","components/GameWindow.js","components/App.js","reducers/playersReducer.js","reducers/resultReducer.js","reducers/screenReducer.js","reducers/turnReducer.js","reducers/index.js","index.js"],"names":["_path","Container","styled","div","HeaderWrapper","header","FooterWrapper","footer","ScreenWrapper","GlobalStyle","createGlobalStyle","Header","screen","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGithub","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","ref","id","d","ForwardRef","Footer","href","rel","className","Ship","type","locations","Array","fill","hits","index","push","checkHit","every","loc","includes","shipTypes","Gameboard","boardSize","board","ships","adjacentSquares","leftEdge","rightEdge","shipsLeft","init","forEach","ship","occupied","shot","coord","currentSquare","find","square","hit","isSunk","setShipSankOnBoard","generated","generateLocations","collision","addShipLocationsOnBoard","direction","addAdjacentSquares","row","col","Math","floor","random","shipLocationArray","some","num","combination","manualLocations","addShipLocations","shipType","array","shipPart","start","end","shipRow","upperRow","map","lowerRow","allRows","concat","shipColumn","leftColumn","rightColumn","allColumns","Player","name","gameBoard","opponentBoard","cell","receiveAttack","Wrapper","TitleResultWrapper","GridWrapper","background","opacity","BattlefieldWrapper","fadeUp","keyframes","Text","h1","small","Button","button","mini","ButtonsWrapper","GridContainer","table","Square","td","highlight","sunk","enemy","player","shrink","HitMark","MissMark","INITIALIZE_PLAYERS","PLACE_SHIP","GENERATE_COMPUTER_SHIPS","RESET_BOARD","FIRE_SHOT","RESET","SETUP","GAME","RESULT","TURN","WINNER","state","randomSquare","selectedSquare","startingSquare","validSquares","filteredDirections","directions","createFilteredDirections","validCoords","filter","dir","diffRowSquare","setRandomSquare","createValidSquares","GameBoard","oppositeDirection","checkShipSank","resetMove","AiReset","reverse","selectedCoord","AiMove","playerGameBoard","connect","winner","initializePlayers","players","payload","generateComputerShips","setup","reset","onClick","human","computer","player1","player2","handleCreatePlayers","Grid","WrappedComponent","hovered","handlePlaceShip","handleMouseEnter","handleMouseLeave","slice","onMouseEnter","onMouseLeave","placeShip","details","resetBoard","gameStart","useState","count","setCount","setDirection","setHovered","outOfBounds","shipLength","toUpperCase","handleAttack","turn","fireShot","attacker","receiver","setTurn","showResult","declareWinner","computerMove","p1","p2","computerShot","checkAllShipsSank","setTimeout","GameWindow","playersReducer","action","newState","manualShipLocations","generateShipLocations","fire","resultReducer","screenReducer","turnReducer","appReducer","combineReducers","rootReducer","undefined","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09dfedc1.chunk.js","sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.04be58c1.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 70px minmax(500px, 1fr) 75px;\n  grid-template-areas:\n    \"header \"\n    \"main\"\n    \"footer\";\n`;\n\nexport const HeaderWrapper = styled.header`\n  font-family: \"Press Start 2P\", cursive;\n  grid-area: header;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FooterWrapper = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-area: footer;\n  border: 2px solid white;\n  .logo-container {\n    margin-right: 1em;\n  }\n\n  svg {\n    height: 35px;\n    width: 35px;\n    background: white;\n    border-radius: 50%;\n    border: 2px solid white;\n  }\n\n  span {\n    font-family: \"Press Start 2P\", cursive;\n    font-size: 0.6em;\n  }\n`;\n\nexport const ScreenWrapper = styled.div`\n  grid-area: main;\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        background: black;\n        color: white;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport { HeaderWrapper } from \"./styled-components/appComponentStyles\";\n\nconst Header = ({ screen }) => {\n  return (\n    <HeaderWrapper>\n      {screen === \"start\" ? null : <h1>Battleship</h1>}\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { FooterWrapper } from \"./styled-components/appComponentStyles\";\nimport { ReactComponent as Logo } from \"../assets/github.svg\";\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <a\n        href=\"https://github.com/Harvok17\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"logo-container\"\n      >\n        <Logo />\n      </a>\n      <span>Made by Harvok17</span>\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","class Ship {\n  constructor({ type, length }) {\n    this.length = length;\n    this.locations = Array(length).fill(-1);\n    this.type = type;\n    this.hits = [];\n  }\n\n  hit(index) {\n    this.hits.push(index);\n  }\n\n  isSunk() {\n    if (this.checkHit()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkHit() {\n    return this.locations.every((loc) => this.hits.includes(loc));\n  }\n}\n\nexport default Ship;\n","const shipTypes = [\n  {\n    type: \"carrier\",\n    length: 5,\n  },\n  {\n    type: \"battleship\",\n    length: 4,\n  },\n  {\n    type: \"cruiser\",\n    length: 3,\n  },\n  {\n    type: \"submarine\",\n    length: 3,\n  },\n  {\n    type: \"destroyer\",\n    length: 2,\n  },\n];\n\nexport default shipTypes;\n","import Ship from \"./Ship\";\nimport shipTypes from \"../shipTypes\";\n\nclass Gameboard {\n  constructor() {\n    this.boardSize = 10;\n    this.board = [];\n    this.ships = [];\n    this.adjacentSquares = [];\n    this.leftEdge = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n    this.rightEdge = [9, 19, 29, 39, 49, 59, 69, 79, 89, 99];\n    this.shipsLeft = shipTypes.length;\n    this.init();\n  }\n\n  init() {\n    shipTypes.forEach((ship) => {\n      this.ships.push(new Ship(ship));\n    });\n\n    for (let i = 0; i < this.boardSize * this.boardSize; i++) {\n      this.board.push({\n        occupied: false,\n        shot: false,\n        coord: i,\n      });\n    }\n  }\n\n  resetBoard() {\n    this.board = [];\n    this.ships = [];\n    this.adjacentSquares = [];\n    this.init();\n  }\n\n  receiveAttack(coord) {\n    const currentSquare = this.board.find((square) => square.coord === coord);\n\n    this.ships.forEach((ship) => {\n      if (ship.locations.includes(coord)) {\n        currentSquare.shot = true;\n        ship.hit(coord);\n        if (ship.isSunk()) {\n          this.setShipSankOnBoard(ship);\n          this.shipsLeft--;\n        }\n      } else {\n        currentSquare.shot = true;\n      }\n    });\n  }\n\n  generateShipLocations() {\n    this.ships.forEach((ship) => {\n      let generated;\n      do {\n        generated = this.generateLocations(ship);\n      } while (this.collision(generated.locations));\n      ship.locations = generated.locations;\n      this.addShipLocationsOnBoard(\n        generated.locations,\n        ship.type,\n        generated.direction\n      );\n      this.addAdjacentSquares(generated.locations, generated.direction);\n    });\n  }\n\n  generateLocations(ship) {\n    const direction = Math.floor(Math.random() * 2);\n    let row, col;\n\n    if (direction === 1) {\n      row = Math.floor(Math.random() * this.boardSize);\n      col = Math.floor(Math.random() * (this.boardSize - ship.length));\n    } else {\n      row = Math.floor(Math.random() * (this.boardSize - ship.length));\n      col = Math.floor(Math.random() * this.boardSize);\n    }\n\n    const shipLocationArray = [];\n    for (let i = 0; i < ship.length; i++) {\n      direction === 1\n        ? shipLocationArray.push(row * 10 + (col + i))\n        : shipLocationArray.push((row + i) * 10 + col);\n    }\n\n    return {\n      locations: shipLocationArray,\n      direction: direction === 1 ? \"horizontal\" : \"vertical\",\n    };\n  }\n\n  outOfBounds(locations) {\n    if (locations.some((loc) => !this.board[loc])) {\n      return true;\n    }\n    if (\n      this.rightEdge.some((num) => {\n        return [num, num + 1].every((combination) =>\n          locations.includes(combination)\n        );\n      })\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  collision(locations) {\n    return locations.some((loc) => {\n      return this.adjacentSquares.includes(loc);\n    });\n  }\n\n  manualShipLocations(coord, ship, direction) {\n    const locations = this.manualLocations(coord, ship, direction);\n\n    this.addShipLocations(locations, ship.type);\n    this.addShipLocationsOnBoard(locations, ship.type, direction);\n    this.addAdjacentSquares(locations, direction);\n  }\n\n  manualLocations(coord, ship, direction) {\n    const shipLocationArray = [];\n    for (let i = 0; i < ship.length; i++) {\n      direction === \"horizontal\"\n        ? shipLocationArray.push(coord + i)\n        : shipLocationArray.push(coord + i * 10);\n    }\n    return shipLocationArray;\n  }\n\n  addShipLocations(locations, type) {\n    const currentShip = this.ships.find((ship) => ship.type === type);\n    currentShip.locations = locations;\n  }\n\n  addShipLocationsOnBoard(locations, shipType, direction) {\n    locations.forEach((loc, i, array) => {\n      const currentSquare = this.board.find((square) => square.coord === loc);\n\n      if (i === 0) {\n        currentSquare.shipPart = `${shipType}-start-${direction}`;\n      } else if (i === array.length - 1) {\n        currentSquare.shipPart = `${shipType}-end-${direction}`;\n      } else {\n        currentSquare.shipPart = `${shipType}-body-${direction}`;\n      }\n\n      currentSquare.occupied = true;\n      currentSquare.isSunk = false;\n    });\n  }\n\n  setShipSankOnBoard(ship) {\n    ship.locations.forEach((loc) => {\n      const currentSquare = this.board.find((square) => square.coord === loc);\n\n      currentSquare.isSunk = true;\n    });\n  }\n\n  checkAllShipsSank() {\n    return this.ships.every((ship) => {\n      return ship.isSunk();\n    });\n  }\n\n  addAdjacentSquares(locations, direction) {\n    const start = locations[0];\n    const end = locations[locations.length - 1];\n\n    if (direction === \"horizontal\") {\n      const shipRow = this.leftEdge.includes(start)\n        ? [...locations, end + 1]\n        : this.rightEdge.includes(end)\n        ? [start - 1, ...locations]\n        : [start - 1, ...locations, end + 1];\n      const upperRow = shipRow.map((loc) => loc - 10);\n      const lowerRow = shipRow.map((loc) => loc + 10);\n      const allRows = shipRow.concat(upperRow).concat(lowerRow);\n\n      this.adjacentSquares = this.adjacentSquares.concat(allRows);\n    }\n\n    if (direction === \"vertical\") {\n      const shipColumn = [start - 10, ...locations, end + 10];\n      const leftColumn = this.leftEdge.includes(start)\n        ? []\n        : shipColumn.map((loc) => loc - 1);\n      const rightColumn = this.rightEdge.includes(start)\n        ? []\n        : shipColumn.map((loc) => loc + 1);\n      const allColumns = shipColumn.concat(leftColumn).concat(rightColumn);\n\n      this.adjacentSquares = this.adjacentSquares.concat(allColumns);\n    }\n  }\n}\n\nexport default Gameboard;\n","import Gameboard from \"../factories/Gameboard\";\n\nclass Player {\n  constructor(name) {\n    this.name = name;\n    this.gameBoard = new Gameboard();\n  }\n\n  fire(coord, opponentBoard) {\n    const currentCell = opponentBoard.board.find(\n      (cell) => cell.coord === coord\n    );\n\n    if (currentCell.shot) return false;\n\n    opponentBoard.receiveAttack(coord);\n    return true;\n  }\n}\n\nexport default Player;\n","import styled, { keyframes } from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  font-family: \"Press Start 2P\", cursive;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const TitleResultWrapper = styled.div`\n  padding: 3em;\n  margin-bottom: 100px;\n`;\n\nexport const GridWrapper = styled.div`\n  background: ${(props) => props.background};\n  height: 550px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  opacity: ${(props) => props.opacity};\n  transition: 0.7s;\n`;\n\nexport const BattlefieldWrapper = styled.div`\n  height: 100%;\n  width: 900px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: center;\n  line-height: 2;\n`;\n\nconst fadeUp = keyframes`\n  0% {\n    transform: translateY(30px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\nexport const Text = styled.h1`\n  font-size: ${(props) => (props.small ? \"2.5em\" : \"4em\")};\n  animation: ${fadeUp} 1s ease;\n`;\n\nexport const Button = styled.button`\n  border: 2px solid white;\n  color: white;\n  padding: ${(props) => (props.mini ? \"0.9em 1.5em\" : \"1.5em 2em\")};\n  border-radius: 5px;\n  background: transparent;\n  font-family: inherit;\n  font-size: ${(props) => (props.mini ? \"0.6em\" : \"\")};\n  cursor: pointer;\n  &:hover {\n    background: white;\n    color: black;\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  width: 50%;\n  justify-content: space-between;\n`;\n\nexport const GridContainer = styled.table`\n  border-collapse: collapse;\n`;\n\nexport const Square = styled.td`\n  height: 35px;\n  width: 35px;\n  border: 2px solid lightgrey;\n  cursor: pointer;\n  background-color: ${(props) =>\n    props.highlight\n      ? \"lightgrey\"\n      : props.occupied && !props.sunk\n      ? \"royalblue\"\n      : props.sunk\n      ? \"lightgrey !important\"\n      : \"\"};\n\n  &:hover {\n    cursor: ${(props) => (props.highlight || props.enemy ? \"\" : \"not-allowed\")};\n    background-color: ${(props) =>\n      props.highlight || props.player || props.occupied\n        ? \"\"\n        : props.enemy\n        ? \"lightgreen\"\n        : \"firebrick\"};\n  }\n\n  &.carrier-start-horizontal {\n    border-right: 0;\n  }\n\n  &.carrier-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.carrier-end-horizontal {\n    border-left: 0;\n  }\n\n  &.carrier-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.carrier-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.carrier-end-vertical {\n    border-top: 0;\n  }\n\n  &.battleship-start-horizontal {\n    border-right: 0;\n  }\n\n  &.battleship-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.battleship-end-horizontal {\n    border-left: 0;\n  }\n\n  &.battleship-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.battleship-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.battleship-end-vertical {\n    border-top: 0;\n  }\n\n  &.cruiser-start-horizontal {\n    border-right: 0;\n  }\n\n  &.cruiser-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.cruiser-end-horizontal {\n    border-left: 0;\n  }\n\n  &.cruiser-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.cruiser-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.cruiser-end-vertical {\n    border-top: 0;\n  }\n\n  &.submarine-start-horizontal {\n    border-right: 0;\n  }\n\n  &.submarine-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.submarine-end-horizontal {\n    border-left: 0;\n  }\n\n  &.submarine-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.submarine-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.submarine-end-vertical {\n    border-top: 0;\n  }\n\n  &.destroyer-start-horizontal {\n    border-right: 0;\n  }\n\n  &.destroyer-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.destroyer-end-horizontal {\n    border-left: 0;\n  }\n\n  &.destroyer-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.destroyer-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.destroyer-end-vertical {\n    border-top: 0;\n  }\n`;\n\nconst shrink = keyframes`\n0% {\n  transform: scale(5);\n}\n\n100% {\n  transform: scale(1);\n}\n`;\n\nexport const HitMark = styled.div`\n  color: red;\n  animation: ${shrink} 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n`;\n\nexport const MissMark = styled.div`\n  color: grey;\n  animation: ${shrink} 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n`;\n","export const INITIALIZE_PLAYERS = \"INITIALIZE_PLAYERS\";\nexport const PLACE_SHIP = \"PLACE_SHIP\";\nexport const GENERATE_COMPUTER_SHIPS = \"GENERATE_COMPUTER_SHIPS\";\nexport const RESET_BOARD = \"RESET_BOARD\";\nexport const FIRE_SHOT = \"FIRE_SHOT\";\nexport const RESET = \"RESET\";\nexport const SETUP = \"SETUP\";\nexport const GAME = \"GAME\";\nexport const RESULT = \"RESULT\";\nexport const TURN = \"TURN\";\nexport const WINNER = \"WINNER\";\n","const state = {\n  randomSquare: null,\n  selectedSquare: null,\n  startingSquare: null,\n  direction: null,\n  validSquares: [],\n  filteredDirections: [],\n  directions: [+1, -1, +10, -10],\n};\n\nconst leftEdge = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\nconst rightEdge = [9, 19, 29, 39, 49, 59, 69, 79, 89];\n\nconst makeRandomMove = () => {\n  return state.validSquares[\n    Math.floor(Math.random() * state.validSquares.length)\n  ];\n};\n\nconst createFilteredDirections = () => {\n  const validCoords = state.validSquares.map((square) => square.coord);\n\n  state.filteredDirections = state.directions.filter((dir) => {\n    let diffRowSquare;\n    const currentSquare = dir + state.randomSquare.coord;\n\n    if (\n      (leftEdge.includes(state.randomSquare.coord) &&\n        rightEdge.includes(currentSquare)) ||\n      (rightEdge.includes(state.randomSquare.coord) &&\n        leftEdge.includes(currentSquare))\n    ) {\n      diffRowSquare = currentSquare;\n    }\n\n    return (\n      validCoords.includes(currentSquare) && currentSquare !== diffRowSquare\n    );\n  });\n};\n\nconst setRandomSquare = () => {\n  state.randomSquare = makeRandomMove();\n  if (state.randomSquare.occupied) {\n    state.startingSquare = state.randomSquare.coord;\n    createFilteredDirections();\n  }\n  return state.randomSquare.coord;\n};\n\nconst createValidSquares = (GameBoard) => {\n  state.validSquares = GameBoard.board.filter((square) => !square.shot);\n};\n\nconst setDirection = () => {\n  state.direction =\n    state.filteredDirections[\n      Math.floor(Math.random() * state.filteredDirections.length)\n    ];\n};\n\nconst oppositeDirection = (dir) => -dir;\n\nconst checkShipSank = (GameBoard) => {\n  let ship;\n  ship = GameBoard.ships.find((ship) =>\n    ship.locations.includes(state.startingSquare)\n  );\n\n  return ship.isSunk();\n};\n\nconst resetMove = (GameBoard) => {\n  AiReset();\n  createValidSquares(GameBoard);\n  return setRandomSquare();\n};\n\nconst reverse = () => {\n  state.direction = oppositeDirection(state.direction);\n\n  const selectedCoord = state.startingSquare + state.direction;\n\n  state.selectedSquare = state.validSquares.find(\n    (square) => square.coord === selectedCoord\n  );\n};\n\nexport const AiReset = () => {\n  state.randomSquare = null;\n  state.selectedSquare = null;\n  state.startingSquare = null;\n  state.direction = null;\n  state.validSquares = [];\n  state.filteredDirections = [];\n  state.directions = [+1, -1, +10, -10];\n};\n\nexport const AiMove = (playerGameBoard) => {\n  createValidSquares(playerGameBoard);\n\n  if (!state.selectedSquare) {\n    if (!state.randomSquare) return setRandomSquare();\n    else if (state.randomSquare && state.randomSquare.occupied) {\n      createFilteredDirections();\n      setDirection();\n\n      const selectedCoord = state.randomSquare.coord + state.direction;\n      const selectedSquare = state.validSquares.find(\n        (square) => square.coord === selectedCoord\n      );\n\n      if (!selectedSquare) {\n        return resetMove(playerGameBoard);\n      }\n\n      if (selectedSquare.occupied) {\n        state.selectedSquare = selectedSquare;\n      }\n\n      return selectedSquare.coord;\n    }\n\n    return setRandomSquare();\n  } else if (state.selectedSquare.occupied) {\n    if (checkShipSank(playerGameBoard)) {\n      return resetMove(playerGameBoard);\n    }\n\n    let selectedCoord;\n    if (\n      (leftEdge.includes(state.selectedSquare.coord) &&\n        (state.direction === 1 || state.direction === -1)) ||\n      (rightEdge.includes(state.selectedSquare.coord) &&\n        (state.direction === 1 || state.direction === -1))\n    ) {\n      state.direction = oppositeDirection(state.direction);\n      selectedCoord = state.startingSquare + state.direction;\n\n      state.selectedSquare = state.validSquares.find(\n        (square) => square.coord === selectedCoord\n      );\n    } else {\n      selectedCoord = state.selectedSquare.coord + state.direction;\n\n      state.selectedSquare = state.validSquares.find(\n        (square) => square.coord === selectedCoord\n      );\n    }\n\n    state.selectedSquare = state.validSquares.find(\n      (square) => square.coord === selectedCoord\n    );\n\n    if (!state.selectedSquare && !checkShipSank(playerGameBoard)) {\n      reverse();\n\n      if (!state.selectedSquare) {\n        return resetMove(playerGameBoard);\n      }\n\n      return state.selectedSquare.coord;\n    }\n\n    if (!state.selectedSquare) {\n      return resetMove(playerGameBoard);\n    }\n\n    return state.selectedSquare.coord;\n  } else if (!state.selectedSquare.occupied) {\n    reverse();\n\n    if (!state.selectedSquare) {\n      return resetMove(playerGameBoard);\n    }\n\n    return state.selectedSquare.coord;\n  }\n};\n","import React from \"react\";\nimport Player from \"../../factories/Player\";\nimport {\n  Wrapper,\n  TitleResultWrapper,\n  Text,\n  Button,\n} from \"../styled-components/gameWindowStyles\";\nimport { connect } from \"react-redux\";\nimport {\n  initializePlayers,\n  generateComputerShips,\n  setup,\n  reset,\n} from \"../../actions\";\nimport { AiReset } from \"../../ComputerAI\";\n\nconst StartEnd = ({\n  screen,\n  initializePlayers,\n  generateComputerShips,\n  setup,\n  reset,\n  winner,\n}) => {\n  const handleCreatePlayers = () => {\n    const human = new Player(\"Player\");\n    const computer = new Player(\"Enemy\");\n    initializePlayers({ player1: human, player2: computer });\n    generateComputerShips();\n    setup();\n  };\n\n  const handleReset = () => {\n    reset();\n    AiReset();\n  };\n  return (\n    <Wrapper>\n      <TitleResultWrapper>\n        <Text small={screen === \"result\"}>\n          {screen === \"result\" ? `Winner: ${winner}` : \"Battleship\"}\n        </Text>\n      </TitleResultWrapper>\n      <Button\n        onClick={() => {\n          if (screen === \"result\") {\n            handleReset();\n          } else {\n            handleCreatePlayers();\n          }\n        }}\n      >\n        {screen === \"result\" ? \"Play again\" : \"Start game\"}\n      </Button>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ winner }) => ({ winner });\n\nexport default connect(mapStateToProps, {\n  initializePlayers,\n  generateComputerShips,\n  setup,\n  reset,\n})(StartEnd);\n","import {\n  INITIALIZE_PLAYERS,\n  PLACE_SHIP,\n  GENERATE_COMPUTER_SHIPS,\n  FIRE_SHOT,\n  RESET,\n  SETUP,\n  GAME,\n  RESULT,\n  TURN,\n  WINNER,\n  RESET_BOARD,\n} from \"./types\";\n\nexport const initializePlayers = (players) => {\n  return {\n    type: INITIALIZE_PLAYERS,\n    payload: players,\n  };\n};\n\nexport const placeShip = (details) => {\n  return {\n    type: PLACE_SHIP,\n    payload: details,\n  };\n};\n\nexport const resetBoard = () => {\n  return {\n    type: RESET_BOARD,\n  };\n};\n\nexport const generateComputerShips = () => {\n  return {\n    type: GENERATE_COMPUTER_SHIPS,\n  };\n};\n\nexport const fireShot = ({ coord, attacker, receiver }) => {\n  return {\n    type: FIRE_SHOT,\n    payload: { coord, attacker, receiver },\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: RESET,\n  };\n};\n\nexport const setup = () => {\n  return {\n    type: SETUP,\n  };\n};\n\nexport const gameStart = () => {\n  return {\n    type: GAME,\n  };\n};\n\nexport const showResult = () => {\n  return {\n    type: RESULT,\n  };\n};\n\nexport const setTurn = (turn) => {\n  return {\n    type: TURN,\n    payload: turn,\n  };\n};\n\nexport const declareWinner = (winner) => {\n  return {\n    type: WINNER,\n    payload: winner,\n  };\n};\n","import React from \"react\";\nimport { GridContainer } from \"../styled-components/gameWindowStyles\";\n\nconst Grid = (WrappedComponent) => (props) =>\n  (\n    <GridContainer>\n      <tbody>\n        <WrappedComponent start={0} end={10} {...props} />\n        <WrappedComponent start={10} end={20} {...props} />\n        <WrappedComponent start={20} end={30} {...props} />\n        <WrappedComponent start={30} end={40} {...props} />\n        <WrappedComponent start={40} end={50} {...props} />\n        <WrappedComponent start={50} end={60} {...props} />\n        <WrappedComponent start={60} end={70} {...props} />\n        <WrappedComponent start={70} end={80} {...props} />\n        <WrappedComponent start={80} end={90} {...props} />\n        <WrappedComponent start={90} end={100} {...props} />\n      </tbody>\n    </GridContainer>\n  );\n\nexport default Grid;\n","import React from \"react\";\nimport { Square } from \"../styled-components/gameWindowStyles\";\nimport Grid from \"./Grid\";\n\nconst SetupSquares = ({\n  start,\n  end,\n  player,\n  hovered,\n  handlePlaceShip,\n  handleMouseEnter,\n  handleMouseLeave,\n}) => {\n  return (\n    <tr>\n      {player.gameBoard.board.slice(start, end).map((square) => (\n        <Square\n          key={square.coord}\n          highlight={hovered.includes(square.coord)}\n          occupied={square.occupied}\n          className={square.shipPart}\n          onClick={() => {\n            handlePlaceShip(square.coord, player.gameBoard);\n          }}\n          onMouseEnter={() => {\n            handleMouseEnter(square.coord, player.gameBoard);\n          }}\n          onMouseLeave={handleMouseLeave}\n        ></Square>\n      ))}\n    </tr>\n  );\n};\n\nexport default Grid(SetupSquares);\n","import React, { useState } from \"react\";\nimport {\n  Wrapper,\n  GridWrapper,\n  Button,\n  ButtonsWrapper,\n} from \"../styled-components/gameWindowStyles\";\nimport { placeShip, resetBoard, gameStart } from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nimport shipTypes from \"../../shipTypes\";\n\nimport SetupSquares from \"../boards/SetupSquares\";\n\nconst Setup = ({ player1, placeShip, resetBoard, gameStart }) => {\n  const [count, setCount] = useState(0);\n  const [direction, setDirection] = useState(\"horizontal\");\n  const [hovered, setHovered] = useState([]);\n\n  const handleChangeDirection = () => {\n    if (direction === \"horizontal\") {\n      setDirection(\"vertical\");\n    } else {\n      setDirection(\"horizontal\");\n    }\n  };\n\n  const handlePlaceShip = (coord, gameBoard) => {\n    if (count > 4) return;\n\n    const locations = gameBoard.manualLocations(\n      coord,\n      shipTypes[count],\n      direction\n    );\n\n    if (gameBoard.outOfBounds(locations) || gameBoard.collision(locations))\n      return;\n\n    placeShip({ coord, ship: shipTypes[count], direction });\n    setCount(count + 1);\n  };\n\n  const handleMouseEnter = (coord, gameBoard) => {\n    if (count > 4) return;\n    const shipLength = shipTypes[count].length;\n    const locations = [];\n    for (let i = 0; i < shipLength; i++) {\n      direction === \"horizontal\"\n        ? locations.push(coord + i)\n        : locations.push(coord + i * 10);\n    }\n\n    if (gameBoard.collision(locations) || gameBoard.outOfBounds(locations))\n      return;\n    setHovered(locations);\n  };\n\n  const handleMouseLeave = () => {\n    setHovered([]);\n  };\n\n  const handleResetBoard = () => {\n    resetBoard();\n    setCount(0);\n    setDirection(\"horizontal\");\n  };\n\n  const handleStartGame = () => {\n    gameStart();\n    setCount(0);\n    setDirection(\"horizontal\");\n  };\n\n  return (\n    <Wrapper>\n      <GridWrapper>\n        {count > 4 ? \"All ships are set!\" : \"Place your ships\"}\n        <Button mini onClick={handleChangeDirection}>\n          {direction}\n        </Button>\n        <SetupSquares\n          player={player1}\n          hovered={hovered}\n          handlePlaceShip={handlePlaceShip}\n          handleMouseEnter={handleMouseEnter}\n          handleMouseLeave={handleMouseLeave}\n        />\n        {count > 4 ? (\n          <ButtonsWrapper>\n            <Button mini onClick={handleStartGame}>\n              Play\n            </Button>\n            <Button mini onClick={handleResetBoard}>\n              Reset\n            </Button>\n          </ButtonsWrapper>\n        ) : (\n          `${shipTypes[count].type[0].toUpperCase()}${shipTypes[\n            count\n          ].type.slice(1)}`\n        )}\n      </GridWrapper>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ players: { player1 } }) => ({ player1 });\n\nexport default connect(mapStateToProps, { placeShip, resetBoard, gameStart })(\n  Setup\n);\n","import React from \"react\";\nimport {\n  HitMark,\n  MissMark,\n  Square,\n} from \"../styled-components/gameWindowStyles\";\nimport Grid from \"./Grid\";\n\nconst PlayerSquares = ({ start, end, player }) => (\n  <tr>\n    {player.gameBoard.board.slice(start, end).map((square) => {\n      return (\n        <Square\n          key={square.coord}\n          occupied={square.occupied}\n          className={square.shipPart}\n          sunk={square.isSunk}\n          player\n        >\n          {!square.occupied && square.shot ? (\n            <MissMark>{\"\\u2715\"}</MissMark>\n          ) : square.occupied && square.shot ? (\n            <HitMark>{\"\\u274C\"}</HitMark>\n          ) : null}\n        </Square>\n      );\n    })}\n  </tr>\n);\n\nexport default Grid(PlayerSquares);\n","import React from \"react\";\nimport {\n  HitMark,\n  MissMark,\n  Square,\n} from \"../styled-components/gameWindowStyles\";\nimport Grid from \"./Grid\";\n\nconst EnemySquares = ({ start, end, player, handleAttack }) => {\n  return (\n    <tr>\n      {player.gameBoard.board.slice(start, end).map((square) => (\n        <Square\n          key={square.coord}\n          className={square.isSunk && square.shipPart}\n          sunk={square.isSunk}\n          enemy\n          onClick={() => {\n            handleAttack(square);\n          }}\n        >\n          {!square.occupied && square.shot ? (\n            <MissMark>{\"\\u2715\"}</MissMark>\n          ) : square.occupied && square.shot ? (\n            <HitMark>{\"\\u274C\"}</HitMark>\n          ) : null}\n        </Square>\n      ))}\n    </tr>\n  );\n};\n\nexport default Grid(EnemySquares);\n","import React from \"react\";\nimport {\n  Wrapper,\n  GridWrapper,\n  BattlefieldWrapper,\n} from \"../styled-components/gameWindowStyles\";\n\nimport { connect } from \"react-redux\";\n\nimport { fireShot, setTurn, showResult, declareWinner } from \"../../actions\";\nimport PlayerSquares from \"../boards/PlayerSquares\";\nimport EnemySquares from \"../boards/EnemySquares\";\nimport { AiMove } from \"../../ComputerAI\";\n\nconst Game = ({\n  player1,\n  player2,\n  turn,\n  setTurn,\n  showResult,\n  declareWinner,\n  fireShot,\n}) => {\n  const handleAttack = (square) => {\n    if (\n      square.shot ||\n      turn === 1 ||\n      turn === 3 ||\n      turn === 4 ||\n      turn === 5 ||\n      turn === 6\n    )\n      return;\n\n    fireShot({\n      coord: square.coord,\n      attacker: \"player1\",\n      receiver: \"player2\",\n    });\n\n    if (player2.gameBoard.checkAllShipsSank()) {\n      setTurn(4);\n      declareWinner(player1.name);\n      setTimeout(() => showResult(), 1500);\n    } else if (!square.occupied && !turn) {\n      setTurn(3);\n      setTimeout(() => setTurn(1), 1000);\n      setTimeout(() => computerMove(player1, player2), 2000);\n    } else {\n      setTurn(4);\n      setTimeout(() => setTurn(0), 1000);\n    }\n  };\n\n  const computerMove = (p1, p2) => {\n    const computerShot = AiMove(p1.gameBoard);\n\n    fireShot({\n      coord: computerShot,\n      attacker: \"player2\",\n      receiver: \"player1\",\n    });\n\n    if (p1.gameBoard.checkAllShipsSank()) {\n      declareWinner(p2.name);\n      setTimeout(() => showResult(), 1500);\n    }\n\n    if (p1.gameBoard.board[computerShot].occupied) {\n      setTimeout(() => setTurn(6), 500);\n      setTimeout(() => setTurn(1), 1000);\n      setTimeout(() => {\n        computerMove(p1, p2);\n      }, 2000);\n    } else {\n      setTurn(5);\n      setTimeout(() => setTurn(0), 1000);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <BattlefieldWrapper>\n        <GridWrapper\n          opacity={turn === 0 || turn === 3 || turn === 4 ? \"0.5\" : \"1\"}\n          background={\n            turn === 0 || turn === 3 || turn === 4 ? \"\" : \"hsl(0, 0%, 12.82%)\"\n          }\n        >\n          {player1.name} Ships\n          <PlayerSquares player={player1} />\n          Ships Left:\n          {player1.gameBoard.shipsLeft}\n        </GridWrapper>\n\n        <span>\n          {!turn\n            ? \"Your turn\"\n            : turn === 1\n            ? \"Enemy turn\"\n            : turn === 3 || turn === 5\n            ? \"Miss\"\n            : \"Hit!\"}\n        </span>\n\n        <GridWrapper\n          opacity={turn === 1 || turn === 5 || turn === 6 ? \"0.5\" : \"1\"}\n          background={\n            turn === 1 || turn === 5 || turn === 6 ? \"\" : \"hsl(0, 0%, 12.82%)\"\n          }\n        >\n          {player2.name} Ships\n          <EnemySquares player={player2} handleAttack={handleAttack} />\n          Ships Left:\n          {player2.gameBoard.shipsLeft}\n        </GridWrapper>\n      </BattlefieldWrapper>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ players: { player1, player2 }, turn }) => ({\n  player1,\n  player2,\n  turn,\n});\n\nexport default connect(mapStateToProps, {\n  fireShot,\n  setTurn,\n  showResult,\n  declareWinner,\n})(Game);\n","import React from \"react\";\nimport { ScreenWrapper } from \"./styled-components/appComponentStyles\";\nimport StartEnd from \"./screens/StartEnd\";\nimport Setup from \"./screens/Setup\";\nimport Game from \"./screens/Game\";\n\nconst GameWindow = ({ screen }) => {\n  const renderScreen = () =>\n    screen === \"start\" || screen === \"result\" ? (\n      <StartEnd screen={screen} />\n    ) : screen === \"setup\" ? (\n      <Setup />\n    ) : (\n      <Game />\n    );\n\n  return <ScreenWrapper>{renderScreen()}</ScreenWrapper>;\n};\n\nexport default GameWindow;\n","import React from \"react\";\nimport { Container } from \"./styled-components/appComponentStyles\";\nimport GlobalStyle from \"./styled-components/globalStyle\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport GameWindow from \"./GameWindow\";\nimport { connect } from \"react-redux\";\n\nconst App = ({ screen }) => {\n  return (\n    <Container>\n      <GlobalStyle />\n      <Header screen={screen} />\n      <GameWindow screen={screen} />\n      <Footer />\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    screen: state.screen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import {\n  INITIALIZE_PLAYERS,\n  PLACE_SHIP,\n  GENERATE_COMPUTER_SHIPS,\n  FIRE_SHOT,\n  RESET_BOARD,\n} from \"../actions/types\";\n\nconst playersReducer = (state = {}, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case INITIALIZE_PLAYERS:\n      return { ...state, ...payload };\n\n    case PLACE_SHIP: {\n      const newState = { ...state };\n      newState.player1.gameBoard.manualShipLocations(\n        payload.coord,\n        payload.ship,\n        payload.direction\n      );\n      return { ...newState };\n    }\n\n    case RESET_BOARD: {\n      const newState = { ...state };\n      newState.player1.gameBoard.resetBoard();\n      return { ...newState };\n    }\n\n    case GENERATE_COMPUTER_SHIPS: {\n      const newState = { ...state };\n      newState.player2.gameBoard.generateShipLocations();\n      return { ...newState };\n    }\n\n    case FIRE_SHOT: {\n      const newState = { ...state };\n      newState[payload.attacker].fire(\n        payload.coord,\n        newState[payload.receiver].gameBoard\n      );\n      return { ...newState };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default playersReducer;\n","import { WINNER } from \"../actions/types\";\n\nconst resultReducer = (state = \"\", action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case WINNER:\n      return (state = payload);\n    default:\n      return state;\n  }\n};\n\nexport default resultReducer;\n","import { GAME, RESULT, SETUP } from \"../actions/types\";\n\nconst screenReducer = (state = \"start\", action) => {\n  switch (action.type) {\n    case SETUP:\n      return (state = \"setup\");\n    case GAME:\n      return (state = \"game\");\n    case RESULT:\n      return (state = \"result\");\n    default:\n      return state;\n  }\n};\n\nexport default screenReducer;\n","import { TURN } from \"../actions/types\";\n\nconst turnReducer = (state = 0, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case TURN:\n      return (state = payload);\n    default:\n      return state;\n  }\n};\n\nexport default turnReducer;\n","import { combineReducers } from \"redux\";\nimport { RESET } from \"../actions/types\";\nimport playersReducer from \"./playersReducer\";\nimport resultReducer from \"./resultReducer\";\nimport screenReducer from \"./screenReducer\";\nimport turnReducer from \"./turnReducer\";\n\nconst appReducer = combineReducers({\n  players: playersReducer,\n  screen: screenReducer,\n  turn: turnReducer,\n  winner: resultReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === RESET) {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose } from \"redux\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}