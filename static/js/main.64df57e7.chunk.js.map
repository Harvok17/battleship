{"version":3,"sources":["assets/github.svg","components/styled-components/appComponentStyles.js","components/styled-components/globalStyle.js","factories/Ship.js","shipTypes.js","factories/Gameboard.js","factories/Player.js","actions/types.js","components/styled-components/gameWindowStyles.js","ComputerAI.js","screens/StartEnd.js","actions/index.js","components/Grid/Grid.js","components/EnemySquares/EnemySquares.js","components/Footer/Footer.js","components/Header/Header.js","components/PlayerSquares/PlayerSquares.js","components/SetupSquares/SetupSquares.js","screens/Setup.js","screens/Game.js","GameWindow/GameWindow.js","App.js","reducers/playersReducer.js","reducers/resultReducer.js","reducers/screenReducer.js","reducers/turnReducer.js","reducers/index.js","index.js"],"names":["_path","Container","styled","div","HeaderWrapper","header","FooterWrapper","footer","ScreenWrapper","GlobalStyle","createGlobalStyle","Ship","type","length","this","locations","Array","fill","adjacentLocations","hits","index","push","checkHit","every","loc","includes","shipTypes","Gameboard","boardSize","board","ships","adjacentSquares","leftEdge","rightEdge","shipsLeft","init","forEach","ship","i","occupied","shot","coord","currentSquare","find","square","hit","isSunk","adjLoc","setShipSankOnBoard","generated","generateLocations","collision","addShipLocationsOnBoard","direction","addAdjacentSquares","row","col","Math","floor","random","shipLocationArray","some","num","combination","manualLocations","currentShip","s","shipType","array","shipPart","start","end","shipRow","upperRow","map","lowerRow","allRows","concat","shipColumn","leftColumn","rightColumn","allColumns","Player","name","gameBoard","opponentBoard","cell","receiveAttack","INITIALIZE_PLAYERS","PLACE_SHIP","GENERATE_COMPUTER_SHIPS","RESET_BOARD","FIRE_SHOT","RESET","SETUP","GAME","RESULT","TURN","WINNER","Wrapper","TitleResultWrapper","GridWrapper","background","opacity","display","BattlefieldWrapper","fadeUp","keyframes","Text","h1","small","Button","button","props","mini","ButtonsWrapper","GridContainer","table","Square","td","highlight","sunk","enemy","player","shrink","HitMark","MissMark","Notifier","span","color","state","randomSquare","selectedSquare","startingSquare","validSquares","filteredDirections","directions","createFilteredDirections","validCoords","filter","dir","diffRowSquare","setRandomSquare","createValidSquares","GameBoard","oppositeDirection","checkShipSank","resetMove","AiReset","reverse","selectedCoord","AiMove","playerGameBoard","connect","winner","initializePlayers","players","payload","generateComputerShips","setup","reset","screen","handleCreatePlayers","human","computer","player1","player2","onClick","Grid","WrappedComponent","handleAttack","slice","className","_extends","Object","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGithub","_ref","svgRef","title","titleId","xmlns","width","height","viewBox","ref","id","d","ForwardRef","Footer","href","rel","Header","hovered","handlePlaceShip","handleMouseEnter","handleMouseLeave","onMouseEnter","onMouseLeave","placeShip","details","resetBoard","gameStart","useState","count","setCount","setDirection","setHovered","outOfBounds","shipLength","toUpperCase","turn","fireShot","attacker","receiver","setTurn","showResult","declareWinner","computerMove","p1","p2","computerShot","checkAllShipsSank","setTimeout","GameWindow","playersReducer","action","newState","manualShipLocations","generateShipLocations","fire","resultReducer","screenReducer","turnReducer","appReducer","combineReducers","rootReducer","undefined","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64df57e7.chunk.js","sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGithub(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGithub);\nexport default __webpack_public_path__ + \"static/media/github.04be58c1.svg\";\nexport { ForwardRef as ReactComponent };","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  height: 100vh;\n  display: grid;\n  grid-template-rows: 70px minmax(500px, 1fr) 75px;\n  grid-template-areas:\n    \"header \"\n    \"main\"\n    \"footer\";\n`;\n\nexport const HeaderWrapper = styled.header`\n  font-family: \"Press Start 2P\", cursive;\n  grid-area: header;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const FooterWrapper = styled.footer`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  grid-area: footer;\n  border: 2px solid white;\n  .logo-container {\n    margin-right: 1em;\n  }\n\n  svg {\n    height: 35px;\n    width: 35px;\n    background: white;\n    border-radius: 50%;\n    border: 2px solid white;\n  }\n\n  span {\n    font-family: \"Press Start 2P\", cursive;\n    font-size: 0.6em;\n  }\n`;\n\nexport const ScreenWrapper = styled.div`\n  grid-area: main;\n`;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    * {\n        margin: 0;\n        padding: 0;\n        box-sizing: border-box;\n    }\n\n    body {\n        background: black;\n        color: white;\n        user-select: none;\n    }\n`;\n\nexport default GlobalStyle;\n","class Ship {\n  constructor({ type, length }) {\n    this.length = length;\n    this.locations = Array(length).fill(-1);\n    this.adjacentLocations = [];\n    this.type = type;\n    this.hits = [];\n  }\n\n  hit(index) {\n    this.hits.push(index);\n  }\n\n  isSunk() {\n    if (this.checkHit()) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkHit() {\n    return this.locations.every((loc) => this.hits.includes(loc));\n  }\n}\n\nexport default Ship;\n","const shipTypes = [\n  {\n    type: \"carrier\",\n    length: 5,\n  },\n  {\n    type: \"battleship\",\n    length: 4,\n  },\n  {\n    type: \"cruiser\",\n    length: 3,\n  },\n  {\n    type: \"submarine\",\n    length: 3,\n  },\n  {\n    type: \"destroyer\",\n    length: 2,\n  },\n  {\n    type: \"corvette-1\",\n    length: 1,\n  },\n  {\n    type: \"corvette-2\",\n    length: 1,\n  },\n];\n\nexport default shipTypes;\n","import Ship from \"./Ship\";\nimport shipTypes from \"../shipTypes\";\n\nclass Gameboard {\n  constructor() {\n    this.boardSize = 10;\n    this.board = [];\n    this.ships = [];\n    this.adjacentSquares = [];\n    this.leftEdge = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\n    this.rightEdge = [9, 19, 29, 39, 49, 59, 69, 79, 89, 99];\n    this.shipsLeft = shipTypes.length;\n    this.init();\n  }\n\n  init() {\n    shipTypes.forEach((ship) => {\n      this.ships.push(new Ship(ship));\n    });\n\n    for (let i = 0; i < this.boardSize * this.boardSize; i++) {\n      this.board.push({\n        occupied: false,\n        shot: false,\n        coord: i,\n      });\n    }\n  }\n\n  resetBoard() {\n    this.board = [];\n    this.ships = [];\n    this.adjacentSquares = [];\n    this.init();\n  }\n\n  receiveAttack(coord) {\n    const currentSquare = this.board.find((square) => square.coord === coord);\n\n    this.ships.forEach((ship) => {\n      if (ship.locations.includes(coord)) {\n        currentSquare.shot = true;\n        ship.hit(coord);\n        if (ship.isSunk()) {\n          ship.adjacentLocations.forEach((loc) => {\n            const adjLoc = this.board.find((square) => square.coord === loc);\n            if (adjLoc && !adjLoc.shot) adjLoc.shot = true;\n          });\n          this.setShipSankOnBoard(ship);\n          this.shipsLeft--;\n        }\n      } else {\n        currentSquare.shot = true;\n      }\n    });\n  }\n\n  generateShipLocations() {\n    this.ships.forEach((ship) => {\n      let generated;\n      do {\n        generated = this.generateLocations(ship);\n      } while (this.collision(generated.locations));\n      ship.locations = generated.locations;\n      this.addShipLocationsOnBoard(\n        generated.locations,\n        ship.type,\n        generated.direction\n      );\n      this.addAdjacentSquares(generated.locations, generated.direction, ship);\n    });\n  }\n\n  generateLocations(ship) {\n    const direction = Math.floor(Math.random() * 2);\n    let row, col;\n\n    if (direction === 1) {\n      row = Math.floor(Math.random() * this.boardSize);\n      col = Math.floor(Math.random() * (this.boardSize - ship.length));\n    } else {\n      row = Math.floor(Math.random() * (this.boardSize - ship.length));\n      col = Math.floor(Math.random() * this.boardSize);\n    }\n\n    const shipLocationArray = [];\n    for (let i = 0; i < ship.length; i++) {\n      direction === 1\n        ? shipLocationArray.push(row * 10 + (col + i))\n        : shipLocationArray.push((row + i) * 10 + col);\n    }\n\n    return {\n      locations: shipLocationArray,\n      direction: direction === 1 ? \"horizontal\" : \"vertical\",\n    };\n  }\n\n  outOfBounds(locations) {\n    if (locations.some((loc) => !this.board[loc])) {\n      return true;\n    }\n    if (\n      this.rightEdge.some((num) => {\n        return [num, num + 1].every((combination) =>\n          locations.includes(combination)\n        );\n      })\n    ) {\n      return true;\n    }\n\n    return false;\n  }\n\n  collision(locations) {\n    return locations.some((loc) => {\n      return this.adjacentSquares.includes(loc);\n    });\n  }\n\n  manualShipLocations(coord, ship, direction) {\n    const locations = this.manualLocations(coord, ship, direction);\n    const currentShip = this.ships.find((s) => s.type === ship.type);\n\n    currentShip.locations = locations;\n    this.addShipLocationsOnBoard(locations, ship.type, direction);\n    this.addAdjacentSquares(locations, direction, currentShip);\n  }\n\n  manualLocations(coord, ship, direction) {\n    const shipLocationArray = [];\n    for (let i = 0; i < ship.length; i++) {\n      direction === \"horizontal\"\n        ? shipLocationArray.push(coord + i)\n        : shipLocationArray.push(coord + i * 10);\n    }\n    return shipLocationArray;\n  }\n\n  addShipLocationsOnBoard(locations, shipType, direction) {\n    locations.forEach((loc, i, array) => {\n      const currentSquare = this.board.find((square) => square.coord === loc);\n\n      if (i === 0) {\n        currentSquare.shipPart = `${shipType}-start-${direction}`;\n      } else if (i === array.length - 1) {\n        currentSquare.shipPart = `${shipType}-end-${direction}`;\n      } else {\n        currentSquare.shipPart = `${shipType}-body-${direction}`;\n      }\n\n      currentSquare.occupied = true;\n      currentSquare.isSunk = false;\n    });\n  }\n\n  setShipSankOnBoard(ship) {\n    ship.locations.forEach((loc) => {\n      const currentSquare = this.board.find((square) => square.coord === loc);\n\n      currentSquare.isSunk = true;\n    });\n  }\n\n  checkAllShipsSank() {\n    return this.ships.every((ship) => {\n      return ship.isSunk();\n    });\n  }\n\n  addAdjacentSquares(locations, direction, ship) {\n    const start = locations[0];\n    const end = locations[locations.length - 1];\n\n    if (direction === \"horizontal\") {\n      const shipRow = this.leftEdge.includes(start)\n        ? [...locations, end + 1]\n        : this.rightEdge.includes(end)\n        ? [start - 1, ...locations]\n        : [start - 1, ...locations, end + 1];\n      const upperRow = shipRow.map((loc) => loc - 10);\n      const lowerRow = shipRow.map((loc) => loc + 10);\n      const allRows = shipRow.concat(upperRow).concat(lowerRow);\n\n      ship.adjacentLocations = allRows;\n      this.adjacentSquares = this.adjacentSquares.concat(allRows);\n    }\n\n    if (direction === \"vertical\") {\n      const shipColumn = [start - 10, ...locations, end + 10];\n      const leftColumn = this.leftEdge.includes(start)\n        ? []\n        : shipColumn.map((loc) => loc - 1);\n      const rightColumn = this.rightEdge.includes(start)\n        ? []\n        : shipColumn.map((loc) => loc + 1);\n      const allColumns = shipColumn.concat(leftColumn).concat(rightColumn);\n\n      ship.adjacentLocations = allColumns;\n      this.adjacentSquares = this.adjacentSquares.concat(allColumns);\n    }\n  }\n}\n\nexport default Gameboard;\n","import Gameboard from \"../factories/Gameboard\";\n\nclass Player {\n  constructor(name) {\n    this.name = name;\n    this.gameBoard = new Gameboard();\n  }\n\n  fire(coord, opponentBoard) {\n    const currentCell = opponentBoard.board.find(\n      (cell) => cell.coord === coord\n    );\n\n    if (currentCell.shot) return false;\n\n    opponentBoard.receiveAttack(coord);\n    return true;\n  }\n}\n\nexport default Player;\n","export const INITIALIZE_PLAYERS = \"INITIALIZE_PLAYERS\";\nexport const PLACE_SHIP = \"PLACE_SHIP\";\nexport const GENERATE_COMPUTER_SHIPS = \"GENERATE_COMPUTER_SHIPS\";\nexport const RESET_BOARD = \"RESET_BOARD\";\nexport const FIRE_SHOT = \"FIRE_SHOT\";\nexport const RESET = \"RESET\";\nexport const SETUP = \"SETUP\";\nexport const GAME = \"GAME\";\nexport const RESULT = \"RESULT\";\nexport const TURN = \"TURN\";\nexport const WINNER = \"WINNER\";\n","import styled, { keyframes } from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  text-align: center;\n  font-family: \"Press Start 2P\", cursive;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const TitleResultWrapper = styled.div`\n  margin-bottom: 100px;\n  line-height: 2;\n`;\n\nexport const GridWrapper = styled.div`\n  background: ${({ background }) => background};\n  height: 550px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  opacity: ${({ opacity }) => opacity};\n  transition: 0.7s;\n\n  @media (max-width: 500px) {\n    display: ${({ display }) => display};\n  }\n`;\n\nexport const BattlefieldWrapper = styled.div`\n  position: relative;\n  height: 100%;\n  width: 920px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  text-align: center;\n  line-height: 2;\n\n  @media (max-width: 500px) {\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n  }\n`;\n\nconst fadeUp = keyframes`\n  0% {\n    transform: translateY(30px);\n    opacity: 0;\n  }\n\n  100% {\n    transform: translateY(0);\n    opacity: 1;\n  }\n`;\n\nexport const Text = styled.h1`\n  font-size: ${({ small }) => (small ? \"2.5em\" : \"4em\")};\n  animation: ${fadeUp} 1s ease;\n\n  @media (max-width: 500px) {\n    font-size: ${({ small }) => (small ? \"1.5em\" : \"2em\")};\n  }\n`;\n\nexport const Button = styled.button`\n  border: 2px solid white;\n  color: white;\n  padding: ${(props) => (props.mini ? \"0.9em 1.5em\" : \"1.5em 2em\")};\n  border-radius: 5px;\n  background: transparent;\n  font-family: inherit;\n  font-size: ${(props) => (props.mini ? \"0.6em\" : \"\")};\n  cursor: pointer;\n  &:hover {\n    background: white;\n    color: black;\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  width: 50%;\n  justify-content: space-between;\n`;\n\nexport const GridContainer = styled.table`\n  border-collapse: collapse;\n`;\n\nexport const Square = styled.td`\n  height: 37px;\n  width: 37px;\n  border: 1px solid lightgrey;\n  cursor: pointer;\n  background-color: ${(props) =>\n    props.highlight || props.sunk\n      ? \"lightgrey\"\n      : props.occupied && !props.sunk\n      ? \"royalblue\"\n      : \"\"};\n\n  &:hover {\n    cursor: ${(props) => (props.highlight || props.enemy ? \"\" : \"not-allowed\")};\n    background-color: ${(props) =>\n      props.highlight || props.player || props.occupied || props.sunk\n        ? \"\"\n        : props.enemy\n        ? \"lightgreen\"\n        : \"firebrick\"};\n  }\n\n  &.carrier-start-horizontal {\n    border-right: 0;\n  }\n\n  &.carrier-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.carrier-end-horizontal {\n    border-left: 0;\n  }\n\n  &.carrier-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.carrier-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.carrier-end-vertical {\n    border-top: 0;\n  }\n\n  &.battleship-start-horizontal {\n    border-right: 0;\n  }\n\n  &.battleship-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.battleship-end-horizontal {\n    border-left: 0;\n  }\n\n  &.battleship-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.battleship-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.battleship-end-vertical {\n    border-top: 0;\n  }\n\n  &.cruiser-start-horizontal {\n    border-right: 0;\n  }\n\n  &.cruiser-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.cruiser-end-horizontal {\n    border-left: 0;\n  }\n\n  &.cruiser-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.cruiser-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.cruiser-end-vertical {\n    border-top: 0;\n  }\n\n  &.submarine-start-horizontal {\n    border-right: 0;\n  }\n\n  &.submarine-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.submarine-end-horizontal {\n    border-left: 0;\n  }\n\n  &.submarine-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.submarine-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.submarine-end-vertical {\n    border-top: 0;\n  }\n\n  &.destroyer-start-horizontal {\n    border-right: 0;\n  }\n\n  &.destroyer-body-horizontal {\n    border-left: 0;\n    border-right: 0;\n  }\n\n  &.destroyer-end-horizontal {\n    border-left: 0;\n  }\n\n  &.destroyer-start-vertical {\n    border-bottom: 0;\n  }\n\n  &.destroyer-body-vertical {\n    border-top: 0;\n    border-bottom: 0;\n  }\n\n  &.destroyer-end-vertical {\n    border-top: 0;\n  }\n`;\n\nconst shrink = keyframes`\n0% {\n  transform: scale(5);\n}\n\n100% {\n  transform: scale(1);\n}\n`;\n\nexport const HitMark = styled.div`\n  color: red;\n  animation: ${shrink} 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 500px) {\n    animation: none;\n  }\n`;\n\nexport const MissMark = styled.div`\n  color: grey;\n  animation: ${shrink} 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 500px) {\n    animation: none;\n  }\n`;\n\nexport const Notifier = styled.span`\n  color: ${({ color }) => color};\n  @media (max-width: 500px) {\n    position: absolute;\n    display: ${({ display }) => display};\n    font-size: 2em;\n  }\n`;\n","const state = {\n  randomSquare: null,\n  selectedSquare: null,\n  startingSquare: null,\n  direction: null,\n  validSquares: [],\n  filteredDirections: [],\n  directions: [+1, -1, +10, -10],\n};\n\nconst leftEdge = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90];\nconst rightEdge = [9, 19, 29, 39, 49, 59, 69, 79, 89];\n\nconst makeRandomMove = () => {\n  return state.validSquares[\n    Math.floor(Math.random() * state.validSquares.length)\n  ];\n};\n\nconst createFilteredDirections = () => {\n  const validCoords = state.validSquares.map((square) => square.coord);\n\n  state.filteredDirections = state.directions.filter((dir) => {\n    let diffRowSquare;\n    const currentSquare = dir + state.randomSquare.coord;\n\n    if (\n      (leftEdge.includes(state.randomSquare.coord) &&\n        rightEdge.includes(currentSquare)) ||\n      (rightEdge.includes(state.randomSquare.coord) &&\n        leftEdge.includes(currentSquare))\n    ) {\n      diffRowSquare = currentSquare;\n    }\n\n    return (\n      validCoords.includes(currentSquare) && currentSquare !== diffRowSquare\n    );\n  });\n};\n\nconst setRandomSquare = () => {\n  state.randomSquare = makeRandomMove();\n  if (state.randomSquare.occupied) {\n    state.startingSquare = state.randomSquare.coord;\n    createFilteredDirections();\n  }\n  return state.randomSquare.coord;\n};\n\nconst createValidSquares = (GameBoard) => {\n  state.validSquares = GameBoard.board.filter((square) => !square.shot);\n};\n\nconst setDirection = () => {\n  state.direction =\n    state.filteredDirections[\n      Math.floor(Math.random() * state.filteredDirections.length)\n    ];\n};\n\nconst oppositeDirection = (dir) => -dir;\n\nconst checkShipSank = (GameBoard) => {\n  let ship;\n  ship = GameBoard.ships.find((ship) =>\n    ship.locations.includes(state.startingSquare)\n  );\n\n  return ship.isSunk();\n};\n\nconst resetMove = (GameBoard) => {\n  AiReset();\n  createValidSquares(GameBoard);\n  return setRandomSquare();\n};\n\nconst reverse = () => {\n  state.direction = oppositeDirection(state.direction);\n\n  const selectedCoord = state.startingSquare + state.direction;\n\n  state.selectedSquare = state.validSquares.find(\n    (square) => square.coord === selectedCoord\n  );\n};\n\nexport const AiReset = () => {\n  state.randomSquare = null;\n  state.selectedSquare = null;\n  state.startingSquare = null;\n  state.direction = null;\n  state.validSquares = [];\n  state.filteredDirections = [];\n  state.directions = [+1, -1, +10, -10];\n};\n\nexport const AiMove = (playerGameBoard) => {\n  createValidSquares(playerGameBoard);\n\n  if (!state.selectedSquare) {\n    if (!state.randomSquare) return setRandomSquare();\n    else if (state.randomSquare && state.randomSquare.occupied) {\n      createFilteredDirections();\n      setDirection();\n\n      const selectedCoord = state.randomSquare.coord + state.direction;\n      const selectedSquare = state.validSquares.find(\n        (square) => square.coord === selectedCoord\n      );\n\n      if (!selectedSquare) {\n        return resetMove(playerGameBoard);\n      }\n\n      if (selectedSquare.occupied) {\n        state.selectedSquare = selectedSquare;\n      }\n\n      return selectedSquare.coord;\n    }\n\n    return setRandomSquare();\n  } else if (state.selectedSquare.occupied) {\n    if (checkShipSank(playerGameBoard)) {\n      return resetMove(playerGameBoard);\n    }\n\n    let selectedCoord;\n    if (\n      (leftEdge.includes(state.selectedSquare.coord) &&\n        (state.direction === 1 || state.direction === -1)) ||\n      (rightEdge.includes(state.selectedSquare.coord) &&\n        (state.direction === 1 || state.direction === -1))\n    ) {\n      state.direction = oppositeDirection(state.direction);\n      selectedCoord = state.startingSquare + state.direction;\n\n      state.selectedSquare = state.validSquares.find(\n        (square) => square.coord === selectedCoord\n      );\n    } else {\n      selectedCoord = state.selectedSquare.coord + state.direction;\n\n      state.selectedSquare = state.validSquares.find(\n        (square) => square.coord === selectedCoord\n      );\n    }\n\n    state.selectedSquare = state.validSquares.find(\n      (square) => square.coord === selectedCoord\n    );\n\n    if (!state.selectedSquare && !checkShipSank(playerGameBoard)) {\n      reverse();\n\n      if (!state.selectedSquare) {\n        return resetMove(playerGameBoard);\n      }\n\n      return state.selectedSquare.coord;\n    }\n\n    if (!state.selectedSquare) {\n      return resetMove(playerGameBoard);\n    }\n\n    return state.selectedSquare.coord;\n  } else if (!state.selectedSquare.occupied) {\n    reverse();\n\n    if (!state.selectedSquare) {\n      return resetMove(playerGameBoard);\n    }\n\n    return state.selectedSquare.coord;\n  }\n};\n","import React from \"react\";\nimport Player from \"../factories/Player\";\nimport { connect } from \"react-redux\";\nimport {\n  initializePlayers,\n  generateComputerShips,\n  setup,\n  reset,\n} from \"../actions\";\nimport {\n  Wrapper,\n  TitleResultWrapper,\n  Text,\n  Button,\n} from \"../components/styled-components/gameWindowStyles\";\nimport { AiReset } from \"../ComputerAI\";\n\nconst StartEnd = ({\n  screen,\n  initializePlayers,\n  generateComputerShips,\n  setup,\n  reset,\n  winner,\n}) => {\n  const handleCreatePlayers = () => {\n    const human = new Player(\"Player\");\n    const computer = new Player(\"Enemy\");\n    initializePlayers({ player1: human, player2: computer });\n    generateComputerShips();\n    setup();\n  };\n\n  const handleReset = () => {\n    reset();\n    AiReset();\n  };\n  return (\n    <Wrapper>\n      <TitleResultWrapper>\n        <Text small={screen === \"result\"}>\n          {screen === \"result\" ? `Winner: ${winner}` : \"Battleship\"}\n        </Text>\n      </TitleResultWrapper>\n      <Button\n        onClick={() => {\n          if (screen === \"result\") {\n            handleReset();\n            handleCreatePlayers();\n          } else {\n            handleCreatePlayers();\n          }\n        }}\n      >\n        {screen === \"result\" ? \"Play again\" : \"Start game\"}\n      </Button>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ winner }) => ({ winner });\n\nexport default connect(mapStateToProps, {\n  initializePlayers,\n  generateComputerShips,\n  setup,\n  reset,\n})(StartEnd);\n","import {\n  INITIALIZE_PLAYERS,\n  PLACE_SHIP,\n  GENERATE_COMPUTER_SHIPS,\n  FIRE_SHOT,\n  RESET,\n  SETUP,\n  GAME,\n  RESULT,\n  TURN,\n  WINNER,\n  RESET_BOARD,\n} from \"./types\";\n\nexport const initializePlayers = (players) => {\n  return {\n    type: INITIALIZE_PLAYERS,\n    payload: players,\n  };\n};\n\nexport const placeShip = (details) => {\n  return {\n    type: PLACE_SHIP,\n    payload: details,\n  };\n};\n\nexport const resetBoard = () => {\n  return {\n    type: RESET_BOARD,\n  };\n};\n\nexport const generateComputerShips = () => {\n  return {\n    type: GENERATE_COMPUTER_SHIPS,\n  };\n};\n\nexport const fireShot = ({ coord, attacker, receiver }) => {\n  return {\n    type: FIRE_SHOT,\n    payload: { coord, attacker, receiver },\n  };\n};\n\nexport const reset = () => {\n  return {\n    type: RESET,\n  };\n};\n\nexport const setup = () => {\n  return {\n    type: SETUP,\n  };\n};\n\nexport const gameStart = () => {\n  return {\n    type: GAME,\n  };\n};\n\nexport const showResult = () => {\n  return {\n    type: RESULT,\n  };\n};\n\nexport const setTurn = (turn) => {\n  return {\n    type: TURN,\n    payload: turn,\n  };\n};\n\nexport const declareWinner = (winner) => {\n  return {\n    type: WINNER,\n    payload: winner,\n  };\n};\n","import React from \"react\";\nimport { GridContainer } from \"../styled-components/gameWindowStyles\";\n\nconst Grid = (WrappedComponent) => (props) =>\n  (\n    <GridContainer>\n      <tbody>\n        <WrappedComponent start={0} end={10} {...props} />\n        <WrappedComponent start={10} end={20} {...props} />\n        <WrappedComponent start={20} end={30} {...props} />\n        <WrappedComponent start={30} end={40} {...props} />\n        <WrappedComponent start={40} end={50} {...props} />\n        <WrappedComponent start={50} end={60} {...props} />\n        <WrappedComponent start={60} end={70} {...props} />\n        <WrappedComponent start={70} end={80} {...props} />\n        <WrappedComponent start={80} end={90} {...props} />\n        <WrappedComponent start={90} end={100} {...props} />\n      </tbody>\n    </GridContainer>\n  );\n\nexport default Grid;\n","import React from \"react\";\nimport Grid from \"../Grid/Grid\";\nimport {\n  HitMark,\n  MissMark,\n  Square,\n} from \"../styled-components/gameWindowStyles\";\n\nconst EnemySquares = ({ start, end, player, handleAttack }) => {\n  return (\n    <tr>\n      {player.gameBoard.board.slice(start, end).map((square) => (\n        <Square\n          key={square.coord}\n          className={square.isSunk && square.shipPart}\n          sunk={square.isSunk}\n          enemy\n          onClick={() => {\n            handleAttack(square);\n          }}\n        >\n          {!square.occupied && square.shot ? (\n            <MissMark>{\"\\u2715\"}</MissMark>\n          ) : square.occupied && square.shot ? (\n            <HitMark>{\"\\u274C\"}</HitMark>\n          ) : null}\n        </Square>\n      ))}\n    </tr>\n  );\n};\n\nexport default Grid(EnemySquares);\n","import React from \"react\";\nimport { FooterWrapper } from \"../styled-components/appComponentStyles\";\nimport { ReactComponent as Logo } from \"../../assets/github.svg\";\n\nconst Footer = () => {\n  return (\n    <FooterWrapper>\n      <a\n        href=\"https://github.com/Harvok17\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        className=\"logo-container\"\n      >\n        <Logo />\n      </a>\n      <span>Made by Harvok17</span>\n    </FooterWrapper>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { HeaderWrapper } from \"../styled-components/appComponentStyles\";\n\nconst Header = ({ screen }) => {\n  return (\n    <HeaderWrapper>\n      {screen === \"start\" ? null : <h1>Battleship</h1>}\n    </HeaderWrapper>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport {\n  HitMark,\n  MissMark,\n  Square,\n} from \"../styled-components/gameWindowStyles\";\nimport Grid from \"../Grid/Grid\";\n\nconst PlayerSquares = ({ start, end, player }) => (\n  <tr>\n    {player.gameBoard.board.slice(start, end).map((square) => {\n      return (\n        <Square\n          key={square.coord}\n          occupied={square.occupied}\n          className={square.shipPart}\n          sunk={square.isSunk}\n          player\n        >\n          {!square.occupied && square.shot ? (\n            <MissMark>{\"\\u2715\"}</MissMark>\n          ) : square.occupied && square.shot ? (\n            <HitMark>{\"\\u274C\"}</HitMark>\n          ) : null}\n        </Square>\n      );\n    })}\n  </tr>\n);\n\nexport default Grid(PlayerSquares);\n","import React from \"react\";\nimport { Square } from \"../styled-components/gameWindowStyles\";\nimport Grid from \"../Grid/Grid\";\n\nconst SetupSquares = ({\n  start,\n  end,\n  player,\n  hovered,\n  handlePlaceShip,\n  handleMouseEnter,\n  handleMouseLeave,\n}) => {\n  return (\n    <tr>\n      {player.gameBoard.board.slice(start, end).map((square) => (\n        <Square\n          key={square.coord}\n          highlight={hovered.includes(square.coord)}\n          occupied={square.occupied}\n          className={square.shipPart}\n          onClick={() => {\n            handlePlaceShip(square.coord, player.gameBoard);\n          }}\n          onMouseEnter={() => {\n            handleMouseEnter(square.coord, player.gameBoard);\n          }}\n          onMouseLeave={handleMouseLeave}\n        ></Square>\n      ))}\n    </tr>\n  );\n};\n\nexport default Grid(SetupSquares);\n","import React, { useState } from \"react\";\nimport {\n  Wrapper,\n  GridWrapper,\n  Button,\n  ButtonsWrapper,\n} from \"../components/styled-components/gameWindowStyles\";\nimport { placeShip, resetBoard, gameStart } from \"../actions\";\nimport { connect } from \"react-redux\";\n\nimport shipTypes from \"../shipTypes\";\nimport { SetupSquares } from \"../components\";\n\nconst Setup = ({ player1, placeShip, resetBoard, gameStart }) => {\n  const [count, setCount] = useState(0);\n  const [direction, setDirection] = useState(\"horizontal\");\n  const [hovered, setHovered] = useState([]);\n\n  const handleChangeDirection = () => {\n    if (direction === \"horizontal\") {\n      setDirection(\"vertical\");\n    } else {\n      setDirection(\"horizontal\");\n    }\n  };\n\n  const handlePlaceShip = (coord, gameBoard) => {\n    if (count === shipTypes.length) return;\n\n    const locations = gameBoard.manualLocations(\n      coord,\n      shipTypes[count],\n      direction\n    );\n\n    if (gameBoard.outOfBounds(locations) || gameBoard.collision(locations))\n      return;\n\n    placeShip({ coord, ship: shipTypes[count], direction });\n    setCount(count + 1);\n  };\n\n  const handleMouseEnter = (coord, gameBoard) => {\n    if (count === shipTypes.length) return;\n    const shipLength = shipTypes[count].length;\n    const locations = [];\n    for (let i = 0; i < shipLength; i++) {\n      direction === \"horizontal\"\n        ? locations.push(coord + i)\n        : locations.push(coord + i * 10);\n    }\n\n    if (gameBoard.collision(locations) || gameBoard.outOfBounds(locations))\n      return;\n    setHovered(locations);\n  };\n\n  const handleMouseLeave = () => {\n    setHovered([]);\n  };\n\n  const handleResetBoard = () => {\n    resetBoard();\n    setCount(0);\n    setDirection(\"horizontal\");\n  };\n\n  const handleStartGame = () => {\n    gameStart();\n    setCount(0);\n    setDirection(\"horizontal\");\n  };\n\n  return (\n    <Wrapper>\n      <GridWrapper>\n        {count === shipTypes.length ? \"All ships are set!\" : \"Place your ships\"}\n        <Button mini onClick={handleChangeDirection}>\n          {direction}\n        </Button>\n        <SetupSquares\n          player={player1}\n          hovered={hovered}\n          handlePlaceShip={handlePlaceShip}\n          handleMouseEnter={handleMouseEnter}\n          handleMouseLeave={handleMouseLeave}\n        />\n        {count === shipTypes.length ? (\n          <ButtonsWrapper>\n            <Button mini onClick={handleStartGame}>\n              Play\n            </Button>\n            <Button mini onClick={handleResetBoard}>\n              Reset\n            </Button>\n          </ButtonsWrapper>\n        ) : (\n          `${shipTypes[count].type[0].toUpperCase()}${shipTypes[\n            count\n          ].type.slice(1)}`\n        )}\n      </GridWrapper>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ players: { player1 } }) => ({ player1 });\n\nexport default connect(mapStateToProps, { placeShip, resetBoard, gameStart })(\n  Setup\n);\n","import React from \"react\";\nimport {\n  Wrapper,\n  GridWrapper,\n  BattlefieldWrapper,\n  Notifier,\n} from \"../components/styled-components/gameWindowStyles\";\n\nimport { connect } from \"react-redux\";\n\nimport { fireShot, setTurn, showResult, declareWinner } from \"../actions\";\n\nimport { AiMove } from \"../ComputerAI\";\nimport { PlayerSquares, EnemySquares } from \"../components\";\n\nconst Game = ({\n  player1,\n  player2,\n  turn,\n  setTurn,\n  showResult,\n  declareWinner,\n  fireShot,\n}) => {\n  const handleAttack = (square) => {\n    if (\n      square.shot ||\n      turn === 1 ||\n      turn === 3 ||\n      turn === 4 ||\n      turn === 5 ||\n      turn === 6\n    )\n      return;\n\n    fireShot({\n      coord: square.coord,\n      attacker: \"player1\",\n      receiver: \"player2\",\n    });\n\n    if (player2.gameBoard.checkAllShipsSank()) {\n      setTurn(4);\n      declareWinner(player1.name);\n      setTimeout(() => showResult(), 1500);\n    } else if (!square.occupied && !turn) {\n      setTurn(3);\n      setTimeout(() => setTurn(1), 1000);\n      setTimeout(() => computerMove(player1, player2), 2000);\n    } else {\n      setTurn(4);\n      setTimeout(() => setTurn(0), 1000);\n    }\n  };\n\n  const computerMove = (p1, p2) => {\n    const computerShot = AiMove(p1.gameBoard);\n\n    fireShot({\n      coord: computerShot,\n      attacker: \"player2\",\n      receiver: \"player1\",\n    });\n\n    if (p1.gameBoard.checkAllShipsSank()) {\n      declareWinner(p2.name);\n      setTimeout(() => showResult(), 1500);\n    }\n\n    if (p1.gameBoard.board[computerShot].occupied) {\n      setTimeout(() => setTurn(6), 500);\n      setTimeout(() => setTurn(1), 1000);\n      setTimeout(() => {\n        computerMove(p1, p2);\n      }, 2000);\n    } else {\n      setTurn(5);\n      setTimeout(() => setTurn(0), 1000);\n    }\n  };\n\n  return (\n    <Wrapper>\n      <BattlefieldWrapper>\n        <GridWrapper\n          opacity={turn === 0 || turn === 3 || turn === 4 ? \"0.5\" : \"1\"}\n          background={\n            turn === 0 || turn === 3 || turn === 4 ? \"\" : \"hsl(0, 0%, 12.82%)\"\n          }\n          display={turn === 0 || turn === 3 || turn === 4 ? \"none\" : \"flex\"}\n        >\n          {player1.name} Ships\n          <PlayerSquares player={player1} />\n          Ships Left: {player1.gameBoard.shipsLeft}\n        </GridWrapper>\n\n        <Notifier\n          display={!turn || turn === 1 ? \"none\" : \"block\"}\n          color={\n            !turn || turn === 1\n              ? \"white\"\n              : turn === 3 || turn === 5\n              ? \"red\"\n              : \"limegreen\"\n          }\n        >\n          {!turn\n            ? \"Your turn\"\n            : turn === 1\n            ? \"Enemy turn\"\n            : turn === 3 || turn === 5\n            ? \"Miss\"\n            : \"Hit!\"}\n        </Notifier>\n\n        <GridWrapper\n          turn={turn}\n          opacity={turn === 1 || turn === 5 || turn === 6 ? \"0.5\" : \"1\"}\n          background={\n            turn === 1 || turn === 5 || turn === 6 ? \"\" : \"hsl(0, 0%, 12.82%)\"\n          }\n          display={turn === 1 || turn === 5 || turn === 6 ? \"none\" : \"flex\"}\n        >\n          {player2.name} Ships\n          <EnemySquares player={player2} handleAttack={handleAttack} />\n          Ships Left: {player2.gameBoard.shipsLeft}\n        </GridWrapper>\n      </BattlefieldWrapper>\n    </Wrapper>\n  );\n};\n\nconst mapStateToProps = ({ players: { player1, player2 }, turn }) => ({\n  player1,\n  player2,\n  turn,\n});\n\nexport default connect(mapStateToProps, {\n  fireShot,\n  setTurn,\n  showResult,\n  declareWinner,\n})(Game);\n","import React from \"react\";\nimport { ScreenWrapper } from \"../components/styled-components/appComponentStyles\";\nimport StartEnd from \"../screens/StartEnd\";\nimport Setup from \"../screens/Setup\";\nimport Game from \"../screens/Game\";\n\nconst GameWindow = ({ screen }) => {\n  const renderScreen = () =>\n    screen === \"start\" || screen === \"result\" ? (\n      <StartEnd screen={screen} />\n    ) : screen === \"setup\" ? (\n      <Setup />\n    ) : (\n      <Game />\n    );\n\n  return <ScreenWrapper>{renderScreen()}</ScreenWrapper>;\n};\n\nexport default GameWindow;\n","import React from \"react\";\nimport { Container } from \"./components/styled-components/appComponentStyles\";\nimport GlobalStyle from \"./components/styled-components/globalStyle\";\nimport GameWindow from \"./GameWindow/GameWindow\";\nimport { connect } from \"react-redux\";\nimport { Footer, Header } from \"./components\";\n\nconst App = ({ screen }) => {\n  return (\n    <Container>\n      <GlobalStyle />\n      <Header screen={screen} />\n      <GameWindow screen={screen} />\n      <Footer />\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    screen: state.screen,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import {\n  INITIALIZE_PLAYERS,\n  PLACE_SHIP,\n  GENERATE_COMPUTER_SHIPS,\n  FIRE_SHOT,\n  RESET_BOARD,\n} from \"../actions/types\";\n\nconst playersReducer = (state = {}, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    case INITIALIZE_PLAYERS:\n      return { ...state, ...payload };\n\n    case PLACE_SHIP: {\n      const newState = { ...state };\n      newState.player1.gameBoard.manualShipLocations(\n        payload.coord,\n        payload.ship,\n        payload.direction\n      );\n      return { ...newState };\n    }\n\n    case RESET_BOARD: {\n      const newState = { ...state };\n      newState.player1.gameBoard.resetBoard();\n      return { ...newState };\n    }\n\n    case GENERATE_COMPUTER_SHIPS: {\n      const newState = { ...state };\n      newState.player2.gameBoard.generateShipLocations();\n      return { ...newState };\n    }\n\n    case FIRE_SHOT: {\n      const newState = { ...state };\n      newState[payload.attacker].fire(\n        payload.coord,\n        newState[payload.receiver].gameBoard\n      );\n      return { ...newState };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default playersReducer;\n","import { WINNER } from \"../actions/types\";\n\nconst resultReducer = (state = \"\", action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case WINNER:\n      return (state = payload);\n    default:\n      return state;\n  }\n};\n\nexport default resultReducer;\n","import { GAME, RESULT, SETUP } from \"../actions/types\";\n\nconst screenReducer = (state = \"start\", action) => {\n  switch (action.type) {\n    case SETUP:\n      return (state = \"setup\");\n    case GAME:\n      return (state = \"game\");\n    case RESULT:\n      return (state = \"result\");\n    default:\n      return state;\n  }\n};\n\nexport default screenReducer;\n","import { TURN } from \"../actions/types\";\n\nconst turnReducer = (state = 0, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case TURN:\n      return (state = payload);\n    default:\n      return state;\n  }\n};\n\nexport default turnReducer;\n","import { combineReducers } from \"redux\";\nimport { RESET } from \"../actions/types\";\nimport playersReducer from \"./playersReducer\";\nimport resultReducer from \"./resultReducer\";\nimport screenReducer from \"./screenReducer\";\nimport turnReducer from \"./turnReducer\";\n\nconst appReducer = combineReducers({\n  players: playersReducer,\n  screen: screenReducer,\n  turn: turnReducer,\n  winner: resultReducer,\n});\n\nconst rootReducer = (state, action) => {\n  if (action.type === RESET) {\n    state = undefined;\n  }\n\n  return appReducer(state, action);\n};\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, compose } from \"redux\";\nimport reducers from \"./reducers\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers, composeEnhancers());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}